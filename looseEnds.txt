Chronological Hypothetical Road map for fpl.bot 

FPL TEAM PARAMS
2 gk, 1 has to start
5 def, 3-5 have to start
5 mids, 2-5 have to start
3 att, 1-3 have to start

Restructure fixture difficulties
    - Have it organized season by season
    - Add holistic approach taking into acount overall home and away performance against everyone not just those specific teams
    - That would be a seperate difficulty rating so eaach team ahas 2 home and 2 away difficulties 
    - Add cummulative bi-seasonal approach ( starting at 2022-23)
        Uses the data for 2021-22
        then 2022-23 uses the previous data + first half of season, then calculate the same thing using the second half 
Server to host data and be able to access them
Host machine learning trianing model

Clean data
    - We kind of already have data in a very organized way for each player 
    - Make it so that when a player is input into the 11 the user wants to rate, their data is easy
    pull and run 


what we have
    - data and algo to predict expected points
    - using that data we have buit an algo to predict optimal team
        - this also works as our wild card transfer because you would want to 
          wild card to the optimal team
    - 

features we still need
    - reorganize data, get rid of unnecessary data and clean it up a bit
    - be able to pull current data such as updates on injuries and new stats for players and teams
    - update team difficulties bi-seasonaly with the most recent games having stronger weights

    - algo to suggest transfers (could suggest save your transfer)
        - must choose who to transfer out and who to bring in based on value and expected points
        - could be a mini version of the optimal team algo except with more constrained parameters
          and also would need to add the bit where it decides who to transfer out
    - algo that instead of giving the optimal team, takes a user input team and
      and outputs the expected points and sugegsted transfer(s)
    - suggested captain should be easy - player with the highest expected points
    - add fields in data indicating tranfer/loan and chance of playing based on physical form
      that field will be 0 when they are injured 
    - in one website they get your team just by you inputting your team name, 
      this could be better than them having to input each plur but at the same time 
      thats not a big deal 
    - I can't think of any more helpful features that our website could provide
    - e

Figure out back-end
    - Code it using Flask
    - What is the input data going to look like?
    - How do we host our algorithms so that when a front-end command is chosen the back-end 
      responds accordingly?

Design UI 
    - Code it w react
    - Design layout